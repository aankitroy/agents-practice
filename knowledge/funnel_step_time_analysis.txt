{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 id: funnel_step_time_analysis\
name: Funnel Step Time Analysis\
description: Analyzes the time users take to progress between funnel steps, calculating median, quartiles, and averages.\
when_to_use:\
  - template_type: "Funnel Time Analysis"\
  - analysis_goal: "Time Between Steps"\
  - check_point_1: "When you need to understand how long users take to progress through the funnel"\
  - check_point_2: "When you want to identify bottlenecks in the user journey"\
  - query_type: "Time Between Steps"\
\
input_parameters:\
  required:\
    - user_id_field: "properties_device_id"   # Field that uniquely identifies users\
    - event_time_field: "event_time"          # Field containing the timestamp of events\
    - event_field: "event"                    # Field containing the event name\
    - funnel_steps: []                        # Array of step names in order\
    - start_date: "2023-01-01"                # Start date for analysis\
    - end_date: "2023-01-31"                  # End date for analysis\
    - database: "analytics"                   # Database name\
    - table_name: "events"                    # Table name\
    - conversion_window: 86400                # Time window in seconds for conversion (24 hours)\
  \
  optional:\
    - time_zone: "UTC"                        # Timezone for date calculations\
    - segment_filter: ""                      # Additional WHERE clause filter\
    - include_percentiles: true               # Whether to include 25th and 75th percentiles\
\
output_fields:\
  - from_step: "Number of the origin step in the transition"\
  - to_step: "Number of the destination step in the transition"\
  - transition_name: "Human-readable name of the transition (e.g., 'Step 1 to Step 2')"\
  - users_count: "Number of users who made this transition within the conversion window"\
  - median_seconds: "Median time in seconds between steps"\
  - median_minutes: "Median time in minutes between steps"\
  - p25_seconds: "25th percentile time in seconds (if include_percentiles=true)"\
  - p75_seconds: "75th percentile time in seconds (if include_percentiles=true)"\
  - avg_seconds: "Average time in seconds between steps"\
  - min_seconds: "Minimum time in seconds between steps"\
  - max_seconds: "Maximum time in seconds between steps"\
\
result_table: "funnel_step_time_results"      # Temporary table name for results\
dependencies:\
  - core_funnel_analysis                      # Depends on core funnel analysis\
execution_order: 5                            # Execute after core funnel analysis\
sql_template: "funnel_step_time.sql"\
\
pre_processing: |\
  # Generate the step_number case statement\
  step_case_statements = []\
  for i, step in enumerate(funnel_steps, 1):\
    if i == 1 and "segment_filter" in locals() and segment_filter:\
      filter_condition = f" AND \{segment_filter\}"\
    else:\
      filter_condition = ""\
    step_case_statements.append(f"WHEN \{\{\{\{event_field\}\}\}\} = '\{step\}'\{filter_condition\} THEN \{i\}")\
  \
  step_case_expr = "CASE " + " ".join(step_case_statements) + " END AS step_number"\
  \
  # Generate the full filter expression\
  step_filters = []\
  for i, step in enumerate(funnel_steps):\
    if i == 0 and "segment_filter" in locals() and segment_filter:\
      step_filters.append(f"(\{\{\{\{event_field\}\}\}\} = '\{step\}' AND \{segment_filter\})")\
    else:\
      step_filters.append(f"\{\{\{\{event_field\}\}\}\} = '\{step\}'")\
  \
  full_filter = " OR ".join(step_filters)\
  \
  # Generate the final query\
  final_query = sql_template\
    .replace("\{\{step_case_expr\}\}", step_case_expr)\
    .replace("\{\{full_filter\}\}", full_filter)\
    # Replace other parameters\
\
-- funnel_step_time.sql\
WITH user_step_times AS (\
  SELECT\
    \{\{user_id_field\}\},\
    \{\{event_field\}\},\
    \{\{event_time_field\}\},\
    \{\{step_case_expr\}\}\
  FROM \{\{database\}\}.\{\{table_name\}\}\
  WHERE \{\{event_time_field\}\} >= '\{\{start_date\}\}' AND \{\{event_time_field\}\} < '\{\{end_date\}\}'\
  AND (\{\{full_filter\}\})\
  ORDER BY \{\{user_id_field\}\}, \{\{event_time_field\}\}\
),\
\
user_funnel_progress AS (\
  SELECT\
    \{\{user_id_field\}\},\
    step_number,\
    min(\{\{event_time_field\}\}) AS first_time_at_step\
  FROM user_step_times\
  GROUP BY \{\{user_id_field\}\}, step_number\
),\
\
step_transitions AS (\
  SELECT\
    u1.\{\{user_id_field\}\},\
    u1.step_number AS from_step,\
    u2.step_number AS to_step,\
    u1.first_time_at_step AS from_time,\
    u2.first_time_at_step AS to_time,\
    dateDiff('second', u1.first_time_at_step, u2.first_time_at_step) AS seconds_between\
  FROM user_funnel_progress u1\
  JOIN user_funnel_progress u2 \
    ON u1.\{\{user_id_field\}\} = u2.\{\{user_id_field\}\} \
    AND u1.step_number + 1 = u2.step_number\
    AND dateDiff('second', u1.first_time_at_step, u2.first_time_at_step) BETWEEN 0 AND \{\{conversion_window\}\}\
)\
\
SELECT\
  from_step,\
  to_step,\
  concat('Step ', from_step, ' to Step ', to_step) AS transition_name,\
  count(*) AS users_count,\
  round(quantile(0.5)(seconds_between)) AS median_seconds,\
  round(quantile(0.5)(seconds_between) / 60, 2) AS median_minutes,\
  \{% if include_percentiles %\}\
  round(quantile(0.25)(seconds_between)) AS p25_seconds,\
  round(quantile(0.75)(seconds_between)) AS p75_seconds,\
  \{% endif %\}\
  round(avg(seconds_between)) AS avg_seconds,\
  round(min(seconds_between)) AS min_seconds,\
  round(max(seconds_between)) AS max_seconds\
FROM step_transitions\
GROUP BY from_step, to_step, transition_name\
ORDER BY from_step, to_step\
\
Example usage:\
\
\{\
  "user_id_field": "properties_device_id",\
  "event_time_field": "event_time",\
  "event_field": "event",\
  "funnel_steps": ["login_completed", "meditation_completed"],\
  "start_date": "2025-03-20",\
  "end_date": "2025-03-27",\
  "database": "isha",\
  "table_name": "miracle_of_minds",\
  "conversion_window": 86400,\
  "segment_filter": "properties_type = 'signup'",\
  "include_percentiles": true\
\}}